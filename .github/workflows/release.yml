name: Release Visualization

on:
  push:
    branches:
      - master

jobs:
  formatting:
    name: Check Code Formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install Formatting
      run: |
        python -m pip install --upgrade pip
        pip install black flake8
    - name: Check Formatting
      run: |
        flake8 --config=.flake8 .
        black -l 119 --check .

  tests:
    name: Run Unit Tests
    needs: formatting
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install visualization
      run: |
        python -m pip install --upgrade pip  
        pip install .

  pypi:
    name: Release To PyPi
    needs: formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v5.1
    - name: Set up Python
      if: contains(steps.changed-files.outputs.modified_files, 'visualization/version.py')
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install publishing dependencies
      if: contains(steps.changed-files.outputs.modified_files, 'visualization/version.py')
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      if: contains(steps.changed-files.outputs.modified_files, 'visualization/version.py')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*
  
  release:
    name: Create GitHub Release
    needs: formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
        with:
          fetch-depth: 2
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v5.1
      - name: Tag Version
        if: contains(steps.changed-files.outputs.modified_files, 'visualization/version.py')
        id: set_tag
        run: |
          export VER=$(python -c "exec(open('visualization/version.py','r').read());print(__version__)")
          echo "::set-output name=tag_name::${VER}"
      - name: Create Release
        if: contains(steps.changed-files.outputs.modified_files, 'visualization/version.py')
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.set_tag.outputs.tag_name }}
          release_name: Release ${{ steps.set_tag.outputs.tag_name }}
          draft: false
          prerelease: false
    
  docs:
    needs: formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install visualization
        run: |
          python -m pip install --upgrade pip  
          pip install .[docs]
      - name: Make docs
        run: cd docs && . gh_deploy.sh
